// Generated from example.mino
// Test Mino compile

// declare html fragments as variables!
/**
 * HTML template string generated by Mino
 * @returns {string}
 */
export const view = `<div class="greet">Welcome to mino!</div>`;

// declare css styles as variables!
/**
 * CSS template string generated by Mino
 * @returns {string}
 */
export const greetingStyle = `.greet { color: blue; }`;

// dynamically interpolate values!

/**
 * HTML template function generated by Mino
 * @returns {string}
 */
export const test1 = (...args) => `<p>${args[0] ?? ''}</p>`;

/**
 * HTML template function generated by Mino
 * @param message
 * @returns {string}
 */
export const greeting = (message) => `<style>$${greetingStyle()}</style>
  <p class="greet">$${message}</p>`;

const exampleGreeting = greeting("Hello, world!")

/**
 * CSS template string generated by Mino
 * @returns {string}
 */
export const pageStyles = `main {
    width: 100%;
    min-height: 100vh;
  }`;

/**
 * HTML template string generated by Mino
 * @returns {string}
 */
export const styleshet = `$${pageStyles()}
  $${greetingStyles()}`;

/**
 * HTML template string generated by Mino
 * @returns {string}
 */
export const container = `<style>$${styleshet()}</style>
  <main>$${content}</main>`;

function render() {
  return container(
    greeting(message)
  )
}

/**
 * @param example 
 */
const myVar = 123;

export { view, styles, greet };

