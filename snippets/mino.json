{
  "CSS Block (assignment)": {
    "prefix": ["css", "@css"],
    "body": [
      "const ${1:styles} = @css {",
      "  ${2:/* CSS styles */}",
      "}"
    ],
    "description": "Create a CSS block assignment"
  },
  "HTML Block (assignment)": {
    "prefix": ["html", "@html"],
    "body": [
      "const ${1:template} = @html {",
      "  ${2:<!-- HTML content -->}",
      "}"
    ],
    "description": "Create an HTML block assignment"
  },
  "HTML Arrow (return block)": {
    "prefix": ["html-arrow", "@html->"],
    "body": [
      "const ${1:render} = (${2:arg}) => @html {",
      "  ${3:<div>${${2:arg}}</div>}",
      "}"
    ],
    "description": "Arrow function that returns an @html block"
  },
  "CSS Arrow (return block)": {
    "prefix": ["css-arrow", "@css->"],
    "body": [
      "const ${1:styleFn} = (${2:arg}) => @css {",
      "  ${3:.cls { color: ${${2:arg}}; }}",
      "}"
    ],
    "description": "Arrow function that returns an @css block"
  },
  "Button Component": {
    "prefix": "btn-component",
    "body": [
      "const ${1:buttonStyles} = @css {",
      "  .btn {",
      "    background: ${${2:primaryColor}};",
      "    color: ${${3:textColor}};",
      "    border: none;",
      "    padding: 8px 16px;",
      "    border-radius: 4px;",
      "    cursor: pointer;",
      "    transition: opacity 0.2s;",
      "  }",
      "  ",
      "  .btn:hover {",
      "    opacity: 0.8;",
      "  }",
      "}",
      "",
      "const ${4:buttonTemplate} = @html {",
      "  <button class=\"btn ${${6:className}}\" onclick=\"${${7:onClick}}\">",
      "    ${${8:text}}",
      "  </button>",
      "}"
    ],
    "description": "Create a complete button component with styles and template"
  },
  "Card Component": {
    "prefix": "card-component",
    "body": [
      "const ${1:cardStyles} = @css {",
      "  .card {",
      "    background: white;",
      "    border: 1px solid #ddd;",
      "    border-radius: 8px;",
      "    padding: 24px;",
      "    box-shadow: 0 2px 4px rgba(0,0,0,0.1);",
      "  }",
      "  ",
      "  .card-title {",
      "    font-size: 1.25rem;",
      "    font-weight: 600;",
      "    margin-bottom: 8px;",
      "    color: #333;",
      "  }",
      "  ",
      "  .card-content {",
      "    color: #666;",
      "    line-height: 1.5;",
      "  }",
      "}",
      "",
      "const ${2:cardTemplate} = @html {",
      "  <div class=\"card\">",
      "    <h3 class=\"card-title\">${${4:title}}</h3>",
      "    <div class=\"card-content\">${${5:content}}</div>",
      "  </div>",
      "}"
    ],
    "description": "Create a card component with styles and template"
  },
  "User Profile": {
    "prefix": "user-profile",
    "body": [
      "const ${1:userProfileStyles} = @css {",
      "  .user-profile {",
      "    display: flex;",
      "    align-items: center;",
      "    gap: 16px;",
      "    padding: 16px;",
      "    border-radius: 8px;",
      "    background: #f8f9fa;",
      "  }",
      "  ",
      "  .user-avatar {",
      "    width: 64px;",
      "    height: 64px;",
      "    border-radius: 50%;",
      "    object-fit: cover;",
      "  }",
      "  ",
      "  .user-info h3 {",
      "    margin: 0 0 4px 0;",
      "    color: #333;",
      "  }",
      "  ",
      "  .user-info p {",
      "    margin: 0;",
      "    color: #666;",
      "    font-size: 0.9rem;",
      "  }",
      "}",
      "",
      "const ${2:userProfileTemplate} = @html {",
      "  <div class=\"user-profile\">",
      "    <img src=\"${${4:user.avatar}}\" alt=\"${${5:user.name}}\" class=\"user-avatar\" />",
      "    <div class=\"user-info\">",
      "      <h3>${${6:user.name}}</h3>",
      "      <p>${${7:user.email}}</p>",
      "      <p>${${8:user.role}}</p>",
      "    </div>",
      "  </div>",
      "}"
    ],
    "description": "Create a user profile component"
  },
  "Navigation Menu": {
    "prefix": "nav-menu",
    "body": [
      "const ${1:navStyles} = @css {",
      "  .navbar {",
      "    display: flex;",
      "    justify-content: space-between;",
      "    align-items: center;",
      "    padding: 1rem 2rem;",
      "    background: #333;",
      "    color: white;",
      "  }",
      "  ",
      "  .nav-brand {",
      "    font-size: 1.5rem;",
      "    font-weight: bold;",
      "  }",
      "  ",
      "  .nav-links {",
      "    display: flex;",
      "    list-style: none;",
      "    gap: 2rem;",
      "    margin: 0;",
      "    padding: 0;",
      "  }",
      "  ",
      "  .nav-links a {",
      "    color: white;",
      "    text-decoration: none;",
      "    transition: opacity 0.2s;",
      "  }",
      "  ",
      "  .nav-links a:hover {",
      "    opacity: 0.8;",
      "  }",
      "}",
      "",
      "const ${2:navTemplate} = @html {",
      "  <nav class=\"navbar\">",
      "    <div class=\"nav-brand\">${${4:brandName}}</div>",
      "    <ul class=\"nav-links\">",
      "      ${${5:navItems}.map(item => `",
      "        <li><a href=\"${item.href}\">${item.text}</a></li>",
      "      `).join('')}",
      "    </ul>",
      "  </nav>",
      "}"
    ],
    "description": "Create a navigation component"
  },
  "Form Input": {
    "prefix": "form-input",
    "body": [
      "const ${1:inputStyles} = @css {",
      "  .form-group {",
      "    margin-bottom: 1rem;",
      "  }",
      "  ",
      "  .form-label {",
      "    display: block;",
      "    margin-bottom: 0.5rem;",
      "    font-weight: 500;",
      "    color: #333;",
      "  }",
      "  ",
      "  .form-input {",
      "    width: 100%;",
      "    padding: 0.75rem;",
      "    border: 1px solid #ddd;",
      "    border-radius: 4px;",
      "    font-size: 1rem;",
      "  }",
      "  ",
      "  .form-input:focus {",
      "    outline: none;",
      "    border-color: #007bff;",
      "    box-shadow: 0 0 0 2px rgba(0,123,255,0.25);",
      "  }",
      "}",
      "",
      "const ${2:inputTemplate} = @html {",
      "  <div class=\"form-group\">",
      "    <label class=\"form-label\" for=\"${${4:name}}\">${${5:label}}</label>",
      "    <input ",
      "      class=\"form-input\"",
      "      type=\"${${6:type}}\"",
      "      id=\"${${7:name}}\"",
      "      name=\"${${8:name}}\"",
      "      value=\"${${9:value}}\"",
      "      placeholder=\"${${10:placeholder}}\"",
      "    />",
      "  </div>",
      "}"
    ],
    "description": "Create a form input component"
  },
  "Template Interpolation": {
    "prefix": ["${", "interpolate"],
    "body": "${${1:variable}}$0",
    "description": "Insert template interpolation"
  },
  "Complete Page": {
    "prefix": "page-complete",
    "body": [
      "// ${1:PageName}.mino",
      "import { ${2:dependencies} } from '${3:./data}';",
      "",
      "const ${4:pageStyles} = @css {",
      "  .page {",
      "    min-height: 100vh;",
      "    display: flex;",
      "    flex-direction: column;",
      "    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;",
      "  }",
      "  ",
      "  .main-content {",
      "    flex: 1;",
      "    padding: 2rem;",
      "    max-width: 1200px;",
      "    margin: 0 auto;",
      "    width: 100%;",
      "  }",
      "}",
      "",
      "const ${5:pageTemplate} = @html {",
      "  <div class=\"page\">",
      "    <header>",
      "      <h1>${${7:title}}</h1>",
      "    </header>",
      "    <main class=\"main-content\">",
      "      ${${8:content}}",
      "    </main>",
      "    <footer>",
      "      <p>&copy; 2025 My App</p>",
      "    </footer>",
      "  </div>",
      "}",
      "",
      "// Regular JavaScript",
      "function render${9:Page}() {",
      "  return ${5:pageTemplate}('${10:Page Title}', '${11:Page content here}');",
      "}",
      "",
      "export { ${4:pageStyles}, ${5:pageTemplate}, render${9:Page} };"
    ],
    "description": "Create a complete page template with styles and structure"
  }
}