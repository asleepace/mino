// Generated from example.mino
// Test Mino compile

// declare html fragments as variables!
/**
 * HTML template string generated by Mino
 * @returns {string}
 */
export const view = `<div class="greet">Welcome to Mino!</div>`;

// declare css styles as variables!
/**
 * CSS template string generated by Mino
 * @returns {string}
 */
export const greetingStyle = `.greet { color: blue; }`;

// dynamically interpolate values!

// positional args shorthand ($0, $1, ...)
/**
 * HTML template function generated by Mino
 * @returns {string}
 */
export const test1 = (...args) => `<p>${args[0] ?? ''}</p>`;

/**
 * HTML template function generated by Mino
 * @param message
 * @returns {string}
 */
export const greeting = (message) => `<style>$${greetingStyle}</style>
  <p class="greet">$${message}</p>`;

const exampleGreeting = greeting("Hello, world!")

/**
 * CSS template string generated by Mino
 * @returns {string}
 */
export const pageStyles = `main {
    width: 100%;
    min-height: 100vh;
  }`;

// compose styles into a single <style> block
/**
 * HTML template string generated by Mino
 * @returns {string}
 */
export const stylesheet = `$${pageStyles}
  $${greetingStyle}`;

/**
 * HTML template function generated by Mino
 * @param content
 * @returns {string}
 */
export const container = (content) => `<style>$${stylesheet}</style>
  <main>$${content}</main>`;

function render(message) {
  return container(greeting(message))
}

export { view, greetingStyle, greeting, container, render };

