{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Mino",
  "scopeName": "source.mino",
  "fileTypes": ["mino"],
  "patterns": [
    {
      "include": "#css-block"
    },
    {
      "include": "#html-block"
    },
    {
      "include": "source.js"
    }
  ],
  "repository": {
    "css-block": {
      "name": "meta.css.mino",
      "begin": "\\b(const|let|var)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=\\s*(@css)\\s*(\\{)",
      "beginCaptures": {
        "1": {
          "name": "storage.type.js"
        },
        "2": {
          "name": "entity.name.function.css.mino"
        },
        "3": {
          "name": "keyword.control.directive.mino"
        },
        "4": {
          "name": "punctuation.definition.block.begin.mino"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.end.mino"
        }
      },
      "patterns": [
        {
          "include": "#css-content"
        },
        {
          "include": "source.css"
        }
      ]
    },
    "css-content": {
      "patterns": [
        {
          "name": "entity.other.attribute-name.class.css",
          "match": "\\.[a-zA-Z][a-zA-Z0-9-_]*"
        },
        {
          "name": "entity.other.attribute-name.id.css",
          "match": "#[a-zA-Z][a-zA-Z0-9-_]*"
        },
        {
          "name": "entity.name.tag.css",
          "match": "\\b[a-zA-Z][a-zA-Z0-9-]*(?=\\s*\\{)"
        },
        {
          "name": "support.type.property-name.css",
          "match": "\\b(display|background|background-color|background-image|color|padding|margin|border|font-size|font-weight|font-family|width|height|max-width|max-height|min-width|min-height|flex|grid|position|top|left|right|bottom|z-index|opacity|transition|transform|box-shadow|border-radius|text-align|line-height|justify-content|align-items|flex-direction|gap|overflow|cursor|text-decoration|border-width|border-style|border-color)\\s*:"
        },
        {
          "name": "support.constant.property-value.css",
          "match": "\\b(flex|block|inline|inline-block|none|relative|absolute|fixed|sticky|center|left|right|auto|transparent|inherit|initial|unset|bold|normal|lighter|bolder|italic|underline|overline|line-through|uppercase|lowercase|capitalize|pointer|default|text|move|grab|grabbing)\\b"
        },
        {
          "name": "constant.numeric.css",
          "match": "\\b\\d+(\\.\\d+)?(px|em|rem|%|vh|vw|vmin|vmax|pt|pc|in|cm|mm|ex|ch|fr|deg|rad|turn|s|ms)\\b"
        },
        {
          "name": "constant.other.color.rgb-value.css",
          "match": "#[0-9a-fA-F]{3,8}\\b"
        },
        {
          "name": "support.function.css",
          "match": "\\b(rgb|rgba|hsl|hsla|url|calc|var|linear-gradient|radial-gradient)\\("
        }
      ]
    },
    "html-block": {
      "name": "meta.html.mino",
      "begin": "\\b(const|let|var)\\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*=\\s*(@html)\\s*(\\{)",
      "beginCaptures": {
        "1": {
          "name": "storage.type.js"
        },
        "2": {
          "name": "entity.name.function.html.mino"
        },
        "3": {
          "name": "keyword.control.directive.mino"
        },
        "4": {
          "name": "punctuation.definition.block.begin.mino"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.end.mino"
        }
      },
      "patterns": [
        {
          "include": "#template-interpolation"
        },
        {
          "include": "#html-content"
        },
        {
          "include": "text.html.basic"
        }
      ]
    },
    "html-content": {
      "patterns": [
        {
          "name": "meta.tag.html",
          "begin": "<([a-zA-Z][a-zA-Z0-9]*)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "1": {
              "name": "entity.name.tag.html"
            }
          },
          "end": "/?>",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "patterns": [
            {
              "include": "#template-interpolation"
            },
            {
              "include": "#html-attribute"
            }
          ]
        },
        {
          "name": "meta.tag.html",
          "begin": "</([a-zA-Z][a-zA-Z0-9]*)",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "1": {
              "name": "entity.name.tag.html"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.tag.end.html"
            }
          }
        }
      ]
    },
    "html-attribute": {
      "patterns": [
        {
          "name": "meta.attribute.html",
          "begin": "\\b([a-zA-Z][a-zA-Z0-9-]*)(=)",
          "beginCaptures": {
            "1": {
              "name": "entity.other.attribute-name.html"
            },
            "2": {
              "name": "punctuation.separator.key-value.html"
            }
          },
          "end": "(?=\\s|>|/>)",
          "patterns": [
            {
              "name": "string.quoted.double.html",
              "begin": "\"",
              "end": "\"",
              "patterns": [
                {
                  "include": "#template-interpolation"
                },
                {
                  "name": "constant.character.entity.html",
                  "match": "&[a-zA-Z0-9]+;"
                }
              ]
            },
            {
              "name": "string.quoted.single.html",
              "begin": "'",
              "end": "'",
              "patterns": [
                {
                  "include": "#template-interpolation"
                },
                {
                  "name": "constant.character.entity.html",
                  "match": "&[a-zA-Z0-9]+;"
                }
              ]
            },
            {
              "include": "#template-interpolation"
            }
          ]
        },
        {
          "name": "entity.other.attribute-name.html",
          "match": "\\b[a-zA-Z][a-zA-Z0-9-]*(?=\\s|>|/>|=)"
        }
      ]
    },
    "template-interpolation": {
      "name": "meta.template.expression.mino",
      "begin": "\\$\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.mino"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.mino"
        }
      },
      "patterns": [
        {
          "include": "source.js#expression"
        },
        {
          "include": "source.js"
        }
      ]
    }
  }
}